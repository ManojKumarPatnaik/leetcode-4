class Solution {
public:
    int result=0;
    void dfs(vector<vector<int>>& M,int temp,int i,int j,int d)
    {
        if(i<0||j<0||i>M.size()-1||j>M[0].size()-1||M[i][j]==0)
        {
            return;
        }
        temp+=1;
        result=max(result,temp);
        if(d==0)
        {
            dfs(M,temp,i+1,j,d);
        }
        else if(d==1)
        {
            dfs(M,temp,i,j+1,d);
        }
        else if(d==2)
        {
            dfs(M,temp,i+1,j+1,d);
        }
        else if(d==3)
        {
            dfs(M,temp,i+1,j-1,d);
        }
    }
    int longestLine(vector<vector<int>>& M) 
    {
        for(int i=0;i<M.size();i++)
        {
            for(int j=0;j<M[i].size();j++)
            {
                if(M[i][j]==1)
                {
                    dfs(M,0,i,j,0);
                    dfs(M,0,i,j,1);
                    dfs(M,0,i,j,2);
                    dfs(M,0,i,j,3);
                }
            }
        }
        
        return result;
    }
};