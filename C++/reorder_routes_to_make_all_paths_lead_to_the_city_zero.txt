class Solution 
{
    public:
    int minReorder(int n, vector<vector<int>>& connections) 
    {
        int result=0;
        unordered_map<int,vector<int>> t1;
        unordered_map<int,vector<int>> t2;
        unordered_set<int> v;
        for(int i=0;i<connections.size();i++)
        {
            t1[connections[i][0]].push_back(connections[i][1]);
            t2[connections[i][1]].push_back(connections[i][0]);
        }
        deque<int> q={0};
        v.insert(0);
        while(q.size()>0)
        {
            int p=q.front();
            q.pop_front();
            for(int i=0;i<t1[p].size();i++)
            {
                if(v.find(t1[p][i])==v.end())
                {
                    q.push_back(t1[p][i]);
                    result++;
                    v.insert(t1[p][i]);
                }
            }
            for(int i=0;i<t2[p].size();i++)
            {
                if(v.find(t2[p][i])==v.end())
                {
                    q.push_back(t2[p][i]);
                    v.insert(t2[p][i]);
                }
            }
        }
        return result;
    }
};