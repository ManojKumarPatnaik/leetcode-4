class Solution 
{
    public:
    int maxLength(vector<string>& arr) 
    {
        int result=0;
        map<int,int> total;
        vector<string> a;
        for(int i=0;i<arr.size();i++)
        {
            set<char> c;
            int f=0;
            for(int j=0;j<arr[i].length();j++)
            {
                if(c.find(arr[i][j])!=c.end())
                {
                    f=1;
                    break;
                }
                c.insert(arr[i][j]);
            }
            if(f==0)
            {
                a.push_back(arr[i]);   
            }
        }
        int n=a.size();
        vector<int> overall;
        
        for(int i=0;i<n;i++)
        {
            int current=0;
            for(int j=0;j<a[i].length();j++)
            {
                current|=(1<<(a[i][j]-'a'));   
            }
            overall.push_back(current);
        }
        for(int i=0;i<n;i++)
        {
            for(map<int,int>::iterator it=total.begin();it!=total.end();it++)
            {
                if((overall[i]&it->first)==0)
                {
                    total[overall[i]|it->first]=1;
                }
            }
            total[overall[i]]=1;
        }
        for(map<int,int>::iterator it=total.begin();it!=total.end();it++)
        {
            int k=0;
            int current=it->first;
            while(current)
            {
                if(current%2==1)
                {
                    k++;   
                }
                current>>=1;
            }
            result=max(result,k);
        }
        return result;
    }
};