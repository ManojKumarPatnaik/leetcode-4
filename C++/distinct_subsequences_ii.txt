class Solution {
public:
    int distinctSubseqII(string S) 
    {
        int m=1000000007;
        int n=S.length();
        int dp[n+1];
        dp[0]=1;
        map<char,int> total;
        for(int i=0;i<S.length();i++)
        {
            if(total.find(S[i])!=total.end())
            {
                dp[i+1]=(2*(dp[i]%m))%m-dp[total[S[i]]]%m;
            }
            else
            {
                dp[i+1]=(2*(dp[i]%m))%m;
            }
            dp[i+1]%=m;
            total[S[i]]=i;
        }
        return (dp[n]+m-1)%m;
    }
};