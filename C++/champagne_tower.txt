class Solution 
{
    public:
    double champagneTower(int poured, int query_row, int query_glass) 
    {
        double p=poured;
        double dp[100][100];
        memset(dp,0,sizeof(dp));
        dp[0][0]=poured;
        int f=0;
        for(int i=1;i<100;i++)
        {
            for(int j=0;j<=i;j++)
            {
                if(j==0)
                {
                    dp[i][j]=max((dp[i-1][0]-(double)1)/(double)2,(double)0);
                }
                else if(j==i)
                {
                    dp[i][j]=max((dp[i-1][j-1]-(double)1)/(double)2,(double)0);
                }
                else
                {
                    dp[i][j]=max((dp[i-1][j-1]-1)/(double)2,(double)0)+max((dp[i-1][j]-1)/(double)2,(double)0);
                }
                if(i>=query_row&&j>=query_glass)
                {
                    f=1;
                    break;   
                }
            }
            if(f==1)
            {
                break;
            }
        }
        return min(dp[query_row][query_glass],(double)1);
    }
};