class Solution 
{
    public:
    int numberOfSubstrings(string s) 
    {
        int result=0;
        int n=s.length();
        vector<int> a=vector<int>(n+1,0);
        vector<int> b=vector<int>(n+1,0);
        vector<int> c=vector<int>(n+1,0);
        
        for(int i=0;i<n;i++)
        {
            a[i+1]=a[i];
            b[i+1]=b[i];
            c[i+1]=c[i];
            if(s[i]=='a')
            {
                a[i+1]++;
            }
            else if(s[i]=='b')
            {
                b[i+1]++;
            }
            else
            {
                c[i+1]++;
            }
        }
        for(int i=3;i<=n;i++)
        {
            vector<int>::iterator l1;
            vector<int>::iterator l2;
            vector<int>::iterator l3;
            l1=lower_bound(a.begin(),a.end(),a[i]);
            l2=lower_bound(b.begin(),b.end(),b[i]);
            l3=lower_bound(c.begin(),c.end(),c[i]);
            int i1=(int)(l1-a.begin());
            int i2=(int)(l2-b.begin());
            int i3=(int)(l3-c.begin());
            int t=min(i1,min(i2,i3));
            result+=t;
        }
        return result;
    }
};