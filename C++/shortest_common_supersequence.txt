class Solution
{
    public:
    string shortestCommonSupersequence(string str1, string str2) 
    {
        string result="";
        int m=str1.length();
        int n=str2.length();
        vector<vector<string>> dp(m+1,vector<string>(n+1,""));
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(str1[i]==str2[j])
                {
                    dp[i+1][j+1]=dp[i][j]+str1[i];
                }
                else
                {
                    if((int)dp[i+1][j].length()>(int)dp[i][j+1].length())
                    {
                        dp[i+1][j+1]=dp[i+1][j];
                    }
                    else
                    {
                        dp[i+1][j+1]=dp[i][j+1];
                    }
                }
            }
        }
        string lcs=dp[m][n];
        int c1=0;
        int c2=0;
        for(int i=0;i<lcs.length();i++)
        {
            while(str1[c1]!=lcs[i])
            {
                result+=str1[c1];
                c1++;
            }
            while(str2[c2]!=lcs[i])
            {
                result+=str2[c2];
                c2++;
            }
            result+=lcs[i];
            c1++;
            c2++;
        }
        while(c1<str1.length())
        {
            result+=str1[c1];
            c1++;
        }
        while(c2<str2.length())
        {
            result+=str2[c2];
            c2++;
        }
        return result;
    }
};