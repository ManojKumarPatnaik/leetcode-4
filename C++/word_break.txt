class Solution 
{
public:
    bool wordBreak(string s, vector<string>& wordDict) 
    {
        map<int,set<string>> total;
        int n=s.length();
        int dp[n];
        memset(dp,0,sizeof(dp));
        
        for(int i=0;i<wordDict.size();i++)
        {
            total[(int)wordDict[i].length()].insert(wordDict[i]);
        }
        for(int i=0;i<s.length();i++)
        {
            for(int j=1;j<=(int)s.length()-i;j++)
            {
                if(total[j].find(s.substr(i,j))!=total[j].end())
                {
                    if(i==0)
                    {
                        dp[i+j-1]=1;
                    }
                    else if(dp[i+j-1]==0)
                    {
                        dp[i+j-1]=dp[i-1];
                    }
                }
            }
        }
        return dp[n-1]==1;
    }
};