class Solution 
{
    public:
    int strongPasswordChecker(string s) 
    {
        int result=0;
        int n=s.length();
        int i=0;
        int lower=1;
        int upper=1;
        int digit=1;
        int missing=0;
        vector<int> v(n,0);
        while(i<n)
        {
            if(s[i]>='a'&&s[i]<='z')
            {
                lower=0;
            }
            else if(s[i]>='A'&&s[i]<='Z')
            {
                upper=0;
            }
            else if(s[i]>='0'&&s[i]<='9')
            {
                digit=0;
            }
            int j=i;
            while(i<n&&s[i]==s[j])
            {
                i++;
            }
            v[j]=i-j;
        }
        missing=lower+upper+digit;
        if(n<6)
        {
            int d=6-n;
            result=d+max(missing-d,0);
        }
        else
        {
            int over=max(n-20,0);
            int left=0;
            result+=over;
            for(int k=1;k<3;k++)
            {
                for(int i=0;i<n;i++)
                {
                    if(over<=0)
                    {
                        break;
                    }
                    if(v[i]<3||v[i]%3!=(k-1))
                    {
                        continue;
                    }
                    v[i]-=min(over,k);
                    over-=k;
                }
            }
            for(int i=0;i<n;i++)
            {
                if(v[i]>=3&&over>0)
                {
                    int need=v[i]-2;
                    v[i]-=min(over,need);
                    over-=need;
                }
                if(v[i]>=3)
                {
                    left+=v[i]/3;
                }
            }
            result+=max(missing,left);
        }
        return result;
    }
};