class Solution
{
    public:
    vector<vector<int>> diagonalSort(vector<vector<int>>& mat) 
    {
        unordered_map<int,vector<int>> total;
        unordered_map<int,int> indices;
        for(int i=0;i<mat.size();i++)
        {
            for(int j=0;j<mat[i].size();j++)
            {
                total[i-j].push_back(mat[i][j]);   
            }
        }
        for(unordered_map<int,vector<int>>::iterator it=total.begin();it!=total.end();it++)
        {
            sort(it->second.begin(),it->second.end());
        }
        for(int i=0;i<mat.size();i++)
        {
            for(int j=0;j<mat[i].size();j++)
            {
                if(indices.find(i-j)==indices.end())
                {
                    indices[i-j]=0;
                }
                else
                {
                    indices[i-j]++;
                }
                mat[i][j]=total[i-j][indices[i-j]];
            }
        }
        return mat;
    }
};