class Solution {
public:
    int findSubstringInWraproundString(string p) 
    {
        int result=0;
        int c=1;
        int dp[26];
        memset(dp,0,sizeof(dp));
        for(int i=0;i<p.length();i++)
        {
            if(i>0&&(p[i]%26)==((p[i-1]+1)%26))
            {
                dp[p[i]-'a']=max(dp[p[i]-'a'],c);            
            }
            else
            {
                c=1;
                dp[p[i]-'a']=max(dp[p[i]-'a'],c);
            }
            c++;
        }
        for(int i=0;i<26;i++)
        {
            result+=dp[i];
        }
        return result;
    }
};