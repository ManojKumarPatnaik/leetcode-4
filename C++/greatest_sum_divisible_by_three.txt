class Solution 
{
    public:
    int maxSumDivThree(vector<int>& nums) 
    {
        map<int,map<int,int>> total;
        int s=0;
        for(int i=0;i<nums.size();i++)
        {
            total[nums[i]%3][nums[i]]++;
            s+=nums[i];
        }
        int l=s%3;
    
        if(l==1)
        {
            if(total[1].size()>0&&(total[2].size()>1||(total[2].size()==1&&total[2].begin()->second>1)))
            {
                int t1=total[1].begin()->first;
                int t2=total[2].begin()->first;
                total[2][total[2].begin()->first]--;
                if(total[2].begin()->second==0)
                {
                    total[2].erase(total[2].begin()->first);   
                }
                t2+=total[2].begin()->first;
                s-=min(t1,t2);
            }
            else if(total[1].size()>0)
            {
                s-=total[1].begin()->first;   
            }
            else if(total[2].size()>1||(total[2].size()==1&&total[2].begin()->second>1))
            {
                s-=total[2].begin()->first;
                total[2][total[2].begin()->first]--;
                if(total[2].begin()->second==0)
                {
                    total[2].erase(total[2].begin()->first);   
                }
                s-=total[2].begin()->first;
            }
            else
            {
                return 0;   
            }
        }
        if(l==2)
        {
            if(total[2].size()>0&&(total[1].size()>1||(total[1].size()==1&&total[1].begin()->second>1)))
            {
                int t1=total[2].begin()->first;
                int t2=total[1].begin()->first;
                total[1][total[1].begin()->first]--;
                if(total[1].begin()->second==0)
                {
                    total[1].erase(total[1].begin()->first);   
                }
                t2+=total[1].begin()->first;
                s-=min(t1,t2);
            }
            else if(total[2].size()>0)
            {
                s-=total[2].begin()->first;
            }
            else if(total[1].size()>1||(total[1].size()==1&&total[1].begin()->second>1))
            {
                s-=total[1].begin()->first;
                total[1][total[1].begin()->first]--;
                if(total[1].begin()->second==0)
                {
                    total[1].erase(total[1].begin()->first);   
                }
                s-=total[1].begin()->first;
            }
            else
            {
                return 0;   
            }
        }
        return s;
    }
};