class Solution 
{
public:
    bool encode(string s1,string s2)
    {
        string result="";
        int c=0;
        vector<char> a1;
        vector<int> a2;
        vector<char> b1;
        vector<int> b2;
        
        for(int i=0;i<s1.length();i++)
        {
            if(i==0)
            {
                a1.push_back(s1[i]);
                c++;
            }
            else if(s1[i]==s1[i-1])
            {
                c++;
            }
            else
            {
                a2.push_back(c);
                a1.push_back(s1[i]);
                c=1;
            }
        }
        a2.push_back(c);

        c=0;
        for(int i=0;i<s2.length();i++)
        {
            if(i==0)
            {
                b1.push_back(s2[i]);
                c++;
            }
            else if(s2[i]==s2[i-1])
            {
                c++;
            }
            else
            {
                b2.push_back(c);
                b1.push_back(s2[i]);
                c=1;
            }
        }
        b2.push_back(c);
        
        if((int)a1.size()!=(int)b1.size())
        {
            return false;
        }
        for(int i=0;i<a1.size();i++)
        {
            if(a1[i]!=b1[i])
            {
                return false;
            }
            if(b2[i]<a2[i]&&a2[i]<3)
            {
                return false;
            }
            if(b2[i]>a2[i])
            {
                return false;
            }
        }
        
        return true;
    }
    int expressiveWords(string S, vector<string>& words) 
    {
        int result=0;
        int n=S.length();
        for(int i=0;i<words.size();i++)
        {
            if(encode(S,words[i]))
            {
                result++;
            }
        }
        return result;    
    }
};