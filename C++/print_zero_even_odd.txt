class ZeroEvenOdd {
private:
    int n;
    mutex m1;
    mutex m2;
    mutex m3;
public:
    ZeroEvenOdd(int n) {
        this->n = n;
        m1.unlock();
        m2.lock();
        m3.lock();
    }

    // printNumber(x) outputs "x", where x is an integer.
    void zero(function<void(int)> printNumber)
    {
        for(int i=1;i<=n;i+=2)
        {
            m1.lock();
            printNumber(0);
            m3.unlock();
            if(n%2==1&&i==n)
            {
                break;  
            }
            m1.lock();
            printNumber(0);
            m2.unlock();
        }
    }

    void even(function<void(int)> printNumber) 
    {
        for(int i=2;i<=n;i+=2)
        {
            m2.lock();
            printNumber(i);
            m1.unlock();
        }
    }

    void odd(function<void(int)> printNumber) 
    {
        for(int i=1;i<=n;i+=2)
        {
            m3.lock();
            printNumber(i);
            m1.unlock();
        }
    }
};