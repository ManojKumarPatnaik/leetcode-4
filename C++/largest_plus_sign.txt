class Solution 
{
public:
    int orderOfLargestPlusSign(int N, vector<vector<int>>& mines) 
    {
        int result=0;
        unordered_map<int,unordered_map<int,int>> total;
        
        int l[N][N];
        int r[N][N];
        int u[N][N];
        int d[N][N];
        
        memset(l,0,sizeof(l));
        memset(r,0,sizeof(r));
        memset(u,0,sizeof(u));
        memset(d,0,sizeof(d));
        
        for(int i=0;i<mines.size();i++)
        {
            total[mines[i][0]][mines[i][1]]=1;
        }
        
        for(int i=0;i<N;i++)
        {
            for(int j=0;j<N;j++)
            {
                if(j==0)
                {
                    if(total[i].find(j)==total[i].end())
                    {
                        l[i][j]=1;
                    }
                }
                else
                {
                    if(total[i].find(j)!=total[i].end())
                    {
                        l[i][j]=0;
                    }
                    else
                    {
                        l[i][j]=l[i][j-1]+1;
                    }
                }
            }
        }
        for(int i=0;i<N;i++)
        {
            for(int j=N-1;j>-1;j--)
            {
                if(j==N-1)
                {
                    if(total[i].find(j)==total[i].end())
                    {
                        r[i][j]=1;
                    }
                }
                else
                {
                    if(total[i].find(j)!=total[i].end())
                    {
                        r[i][j]=0;
                    }
                    else
                    {
                        r[i][j]=r[i][j+1]+1;
                    }
                }
            }
        }
        for(int i=0;i<N;i++)
        {
            for(int j=0;j<N;j++)
            {
                if(j==0)
                {
                    if(total[j].find(i)==total[j].end())
                    {
                        u[j][i]=1;
                    }
                }
                else
                {
                    if(total[j].find(i)!=total[j].end())
                    {
                        u[j][i]=0;
                    }
                    else
                    {
                        u[j][i]=u[j-1][i]+1;
                    }
                }
            }
        }
        for(int i=0;i<N;i++)
        {
            for(int j=N-1;j>-1;j--)
            {
                if(j==N-1)
                {
                    if(total[j].find(i)==total[j].end())
                    {
                        d[j][i]=1;
                    }
                }
                else
                {
                    if(total[j].find(i)!=total[j].end())
                    {
                        d[j][i]=0;
                    }
                    else
                    {
                        d[j][i]=d[j+1][i]+1;
                    }
                }
            }
        }
        for(int i=0;i<N;i++)
        {
            for(int j=0;j<N;j++)
            {
                int temp=min(l[i][j],r[i][j]);
                temp=min(temp,u[i][j]);
                temp=min(temp,d[i][j]);
                result=max(result,temp);
            }
        }
        return result;
    }
};