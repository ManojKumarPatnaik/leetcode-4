class Solution
{
    public:
    bool check(vector<vector<int>>& A,vector<int>& total,int c,int index)
    {
        if(total[index]!=0)
        {
            return total[index]==c;   
        }
        total[index]=c;
        for(int i=0;i<A[index].size();i++)
        {
            if(!check(A,total,-c,A[index][i]))
            {
                return false;   
            }
        }
        return true;
    }
    bool isBipartite(vector<vector<int>>& graph) 
    {
        int n=graph.size();
        vector<int> total(n,0);
        for(int i=0;i<n;i++)
        {
            if(graph[i].size()==0)
            {
                continue;   
            }
            if(total[i]==0&&!check(graph,total,1,i))
            {
                return false;   
            }
        }
        return true;
    }
};