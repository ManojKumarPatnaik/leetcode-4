class Solution {
public:
    struct node
    {
        int index;
        char value;
    };
    string reverseVowels(string s) 
    {
        vector<char> consonant;
        vector<node> vowel;
        for(int i=0;i<s.length();i++)
        {
            if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u'||s[i]=='A'||s[i]=='E'||s[i]=='I'||s[i]=='O'||s[i]=='U')
            {
                node a;
                a.index=i;
                a.value=s[i];
                vowel.push_back(a);
            }
            else
            {
                consonant.push_back(s[i]);
            }
        }
        
        for(int i=0;i<vowel.size();i++)
        {
            consonant.insert(consonant.begin()+vowel[i].index,vowel[vowel.size()-1-i].value);
        }
        string result="";
        for(int i=0;i<consonant.size();i++)
        {
            result+=consonant[i];
        }
        return result;
    }
};