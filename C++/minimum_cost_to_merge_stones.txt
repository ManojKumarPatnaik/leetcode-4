class Solution 
{
    public:
    int mergeStones(vector<int>& stones, int K) 
    {
        int n=stones.size();
        if((n-1)%(K-1)!=0)
        {
            return -1;   
        }
        vector<int> s={0};
        for(int i=0;i<stones.size();i++)
        {
            s.push_back(s.back()+stones[i]);
        }
        int dp[n][n];
        memset(dp,0,sizeof(dp));
        for(int l=K;l<=n;l++)
        {
            for(int i=0;i<n-l+1;i++)
            {
                int j=i+l-1;
                dp[i][j]=2147483647;
                for(int k=i;k<j;k+=K-1)
                {
                    dp[i][j]=min(dp[i][j],dp[i][k]+dp[k+1][j]);
                }
                if((l-1)%(K-1)==0)
                {
                    dp[i][j]+=s[j+1]-s[i];   
                }
            }
        }
        return dp[0][n-1];
    }
};