class Solution 
{
    public:
    double largestSumOfAverages(vector<int>& A, int K) 
    {
        double result=0;
        
        int n=A.size();
        double dp[n+1][K+1];
        memset(dp,0,sizeof(dp));
        dp[0][0]=0;
        vector<double> s;
        s.push_back(0);
        for(int i=0;i<A.size();i++)
        {
            s.push_back(s.back()+A[i]);
        }
        for(int i=0;i<=n;i++)
        {
            dp[i][0]=0;            
        }
        for(int i=0;i<n;i++)
        {
            dp[i+1][1]=(double)s[i+1]/(double)(i+1);            
        }
        for(int i=0;i<=K;i++)
        {
            dp[0][i]=0;
        }
        for(int i=2;i<=K;i++)
        {
            for(int j=1;j<=n;j++)
            {
                for(int k=0;k<j;k++)
                {
                    dp[j][i]=max(dp[j][i],dp[k][i-1]+(s[j]-s[k])/(double)(j-k));
                }
            }
        }
        
        return dp[n][K];
    }
};