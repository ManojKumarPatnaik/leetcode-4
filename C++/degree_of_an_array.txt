class Solution
{
public:
    int findShortestSubArray(vector<int>& nums)
    {
        int a[50000][2];
        int b[50000];
        memset(a,-1,sizeof(a));
        memset(b,0,sizeof(b));
        int maximum=-2147483648;
        int minimum=2147483647;
        int degree=0;
        
        for(int i=0;i<nums.size();i++)
        {
            b[nums[i]]+=1;
            if(b[nums[i]]>degree)
            {
                degree=b[nums[i]];
            }
            if(a[nums[i]][0]==-1)
            {
                a[nums[i]][0]=i;
                a[nums[i]][1]=i;
            }
            else
            {
                a[nums[i]][1]=i;
            }
            if(nums[i]>maximum)
            {
                maximum=nums[i];
            }
        }
        for(int i=0;i<=maximum;i++)
        {
            if(b[i]==degree)
            {
                if(a[i][1]-a[i][0]+1<minimum)
                {
                    minimum=a[i][1]-a[i][0]+1;
                }
            }
        }
        return minimum;
    }
};