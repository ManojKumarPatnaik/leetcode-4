class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) 
    {
        
        vector<vector<int> > result;
        if(nums.size()<3)
        {
            return result;
        }
        long long int f1=0;
        long long int f2=nums.size()-1;
        sort(nums.begin(),nums.end());
        for(long long int i=0;i<nums.size()-2;i++)
        {
            if(i>0)
            {
                if(nums[i]==nums[i-1])
                {
                    continue;
                }
            }
            f1=i+1;
            f2=nums.size()-1;
            int flag=0;
            long long int p1=-2147483650;
            long long int p2=-2147483650;
            while(f1<f2)
            {
                if(p1==nums[f1]&&flag==1)
                {
                    f1++;
                    continue;
                }
                if(p2==nums[f2]&&flag==1)
                {
                    f2--;
                    continue;
                }
                flag=1;
                if(nums[f1]+nums[f2]==-nums[i])
                {
                    p1=nums[f1];
                    p2=nums[f2];
                    vector<int> temp;
                    temp.push_back(nums[i]);
                    temp.push_back(nums[f1]);
                    temp.push_back(nums[f2]);
                    result.push_back(temp);
                    f1+=1;
                    f2-=1;
                }
                else if(nums[f1]+nums[f2]<-nums[i])
                {
                    f1+=1;
                }
                else
                {
                    f2-=1;
                }
            }
        }
        return result;
    }
};
