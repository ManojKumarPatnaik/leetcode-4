class Solution 
{
    public:
    int slidingPuzzle(vector<vector<int>>& board) 
    {
        int result=0;
        vector<vector<int>> output={{1,2,3},{4,5,0}};
        set<string> total;
        deque<vector<vector<int>>> q;
        deque<int> c;
        q.push_back(board);
        c.push_back(0);
        
        string temp="";
        for(int i=0;i<board.size();i++)
        {
            for(int j=0;j<board[i].size();j++)
            {
                temp+=to_string(board[i][j])+",";
            }
        }
        total.insert(temp);
        
        while(q.size()>0)
        {
            vector<vector<int>> p=q.front();
            int k=c.front();
            q.pop_front();
            c.pop_front();
            int f=0;
            for(int i=0;i<p.size();i++)
            {
                for(int j=0;j<p[i].size();j++)
                {
                    if(p[i][j]!=output[i][j])
                    {
                        f=1;
                        break;
                    }
                }
            }
            if(f==0)
            {
                return k;
            }
            int x;
            int y;
            for(int i=0;i<p.size();i++)
            {
                for(int j=0;j<p[i].size();j++)
                {
                    if(p[i][j]==0)
                    {
                        x=i;
                        y=j;
                        break;
                    }
                }
            }
            if(x==0)
            {
                string temp="";
                vector<vector<int>> current=p;
                int t=current[x][y];
                current[x][y]=current[x+1][y];
                current[x+1][y]=t;
                for(int i=0;i<current.size();i++)
                {
                    for(int j=0;j<current[i].size();j++)
                    {
                        temp+=to_string(current[i][j])+",";
                    }
                }
                if(total.find(temp)==total.end())
                {
                    q.push_back(current);
                    c.push_back(k+1);
                    total.insert(temp);
                }
            }
            if(x==1)
            {
                string temp="";
                vector<vector<int>> current=p;
                int t=current[x][y];
                current[x][y]=current[x-1][y];
                current[x-1][y]=t;
                for(int i=0;i<current.size();i++)
                {
                    for(int j=0;j<current[i].size();j++)
                    {
                        temp+=to_string(current[i][j])+",";
                    }
                }
                if(total.find(temp)==total.end())
                {
                    q.push_back(current);
                    c.push_back(k+1);
                    total.insert(temp);
                }                
            } 
            if(y==0)
            {
                string temp="";
                vector<vector<int>> current=p;
                int t=current[x][y];
                current[x][y]=current[x][y+1];
                current[x][y+1]=t;
                for(int i=0;i<current.size();i++)
                {
                    for(int j=0;j<current[i].size();j++)
                    {
                        temp+=to_string(current[i][j])+",";
                    }
                }
                if(total.find(temp)==total.end())
                {
                    q.push_back(current);
                    c.push_back(k+1);
                    total.insert(temp);
                }                            
            }
            if(y==1)
            {
                string temp="";
                vector<vector<int>> current=p;
                int t=current[x][y];
                current[x][y]=current[x][y+1];
                current[x][y+1]=t;
                for(int i=0;i<current.size();i++)
                {
                    for(int j=0;j<current[i].size();j++)
                    {
                        temp+=to_string(current[i][j])+",";
                    }
                }
                if(total.find(temp)==total.end())
                {
                    q.push_back(current);
                    c.push_back(k+1);
                    total.insert(temp);
                }                            

                temp="";
                current=p;
                t=current[x][y];
                current[x][y]=current[x][y-1];
                current[x][y-1]=t;
                for(int i=0;i<current.size();i++)
                {
                    for(int j=0;j<current[i].size();j++)
                    {
                        temp+=to_string(current[i][j])+",";
                    }
                }
                if(total.find(temp)==total.end())
                {
                    q.push_back(current);
                    c.push_back(k+1);
                    total.insert(temp);
                }                            
                
            }
            if(y==2)
            {
                string temp="";
                vector<vector<int>> current=p;
                int t=current[x][y];
                current[x][y]=current[x][y-1];
                current[x][y-1]=t;
                for(int i=0;i<current.size();i++)
                {
                    for(int j=0;j<current[i].size();j++)
                    {
                        temp+=to_string(current[i][j])+",";
                    }
                }
                if(total.find(temp)==total.end())
                {
                    q.push_back(current);
                    c.push_back(k+1);
                    total.insert(temp);
                }                            
            }
        }
        return -1;   
    }
};