double dp[200][200];
int flag=0;
class Solution 
{
    public:
    double f(double a,double b)
    {
        if(a<=0&&b<=0)
        {
            return 0.5;
        }
        if(a<=0)
        {
            return 1;
        }
        if(b<=0)
        {
            return 0;
        }
        if(dp[(int)a][(int)b]>0)
        {
            return dp[(int)a][(int)b];
        }
        dp[(int)a][(int)b]=0.25*(f(a-4,b)+f(a-3,b-1)+f(a-2,b-2)+f(a-1,b-3));
        return dp[(int)a][(int)b];
    }
    double soupServings(int N) 
    {
        if(N>=5000)
        {
            return 1;
        }
        if(flag==0)
        {
            flag=1;
            memset(dp,0,sizeof(dp));
        }
        dp[(int)ceil((double)N/25)][(int)ceil((double)N/25)]=f((double)ceil((double)N/25),(double)ceil((double)N/25));
        return dp[(int)ceil((double)N/25)][(int)ceil((double)N/25)];
    }
};