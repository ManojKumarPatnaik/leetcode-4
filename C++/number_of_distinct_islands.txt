class Solution {
public:
    string temp="";
    set<string> total;
    void dfs(vector<vector<int>>& grid,int i,int j,int d,int c)
    {
        if(i<0||j<0||i>grid.size()-1||j>grid[0].size()-1||grid[i][j]==0)
        {
            return;
        }
        grid[i][j]=0;
        if(d==-1)
        {
            temp+='0';
            temp+=to_string(c);
        }
        else if(d==0)
        {
            temp+='a';
            temp+=to_string(c);
        }
        else if(d==1)
        {
            temp+='b';            
            temp+=to_string(c);
        }
        else if(d==2)
        {
            temp+='c';            
            temp+=to_string(c);
        }
        else if(d==3)
        {
            temp+='d';            
            temp+=to_string(c);
        }
        dfs(grid,i+1,j,0,c+1);
        dfs(grid,i-1,j,1,c+1);
        dfs(grid,i,j+1,2,c+1);
        dfs(grid,i,j-1,3,c+1);
    }
    int numDistinctIslands(vector<vector<int>>& grid) 
    {
        int result=0;
        for(int i=0;i<grid.size();i++)
        {
            for(int j=0;j<grid[i].size();j++)
            {
                temp="";
                dfs(grid,i,j,-1,0);
                if(temp.length()!=0)
                {
                    total.insert(temp);
                }
            }
        }
        return total.size();
    }
};