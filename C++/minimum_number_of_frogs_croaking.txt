class Solution 
{
    public:
    int minNumberOfFrogs(string croakOfFrogs) 
    {
        int result=0;
        unordered_map<char,int> croak;
        for(int i=0;i<croakOfFrogs.length();i++)
        {
            croak[croakOfFrogs[i]]++;
        }
        if(croak.size()<5)
        {
            return -1;
        }
        if(croak['c']!=croak['r']||croak['r']!=croak['o']||croak['o']!=croak['a']||croak['a']!=croak['k'])
        {
            return -1;
        }
        unordered_map<char,int> order;
        for(int i=0;i<croakOfFrogs.length();i++)
        {
            order[croakOfFrogs[i]]++;
            if(croakOfFrogs[i]=='r')
            {
                order['c']--;
                if(order['c']<0)
                {
                    return -1;
                }
            }
            if(croakOfFrogs[i]=='o')
            {
                order['r']--;
                if(order['r']<0)
                {
                    return -1;
                }
            }
            if(croakOfFrogs[i]=='a')
            {
                order['o']--;
                if(order['o']<0)
                {
                    return -1;
                }
            }
            if(croakOfFrogs[i]=='k')
            {
                order['a']--;   
                if(order['a']<0)
                {
                    return -1;
                }
                result=max(result,order['c']+order['r']+order['o']+order['a']+order['k']);
                order['k']--;
            }
        }
        return result;
    }
};