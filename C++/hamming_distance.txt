class Solution {
public:
    int hammingDistance(int x, int y) 
    {
        string result1="";
        string result2="";
        while(x/2!=0)
        {
            int z=x%2;
            x=x/2;
            if(z==0)
            {
                result1=result1+"0";
            }
            else if(z==1)
            {
                result1=result1+"1";
            }
        }
        if(x==0)
        {
            result1=result1+"0";
        }
        else if(x==1)
        {
            result1=result1+"1";
        }
        while(y/2!=0)
        {
            int z=y%2;
            y=y/2;
            if(z==0)
            {
                result2=result2+"0";
            }
            else if(z==1)
            {
                result2=result2+"1";
            }
        }
        if(y==0)
        {
            result2=result2+"0";
        }
        else if(y==1)
        {
            result2=result2+"1";
        }
        while(result1.length()>result2.length())
        {
            result2=result2+"0";
        }
        while(result1.length()<result2.length()) 
        {
            result1=result1+"0";
        }
        string final1;
        string final2;
        for(int i=result1.length()-1;i>-1;i--)
        {
            final1=final1+result1[i];
        }
        for(int i=result2.length()-1;i>-1;i--)
        {
            final2=final2+result2[i];		
        }
        int count=0;
        for(int i=0;i<final1.length();i++)
        {
            if(final1[i]!=final2[i])
            {
                count=count+1;
            }
        }
        cout<<final1<<endl;
        cout<<final2<<endl;
        return count;
    }
};