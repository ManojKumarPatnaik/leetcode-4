class Solution {
public:
    int numSquares(int n) 
    {
        if(n<3)
        {
            return n;   
        }
        set<int> overall;
        deque<int> result;
        int k=1;
        while(k*k<=n)
        {
            result.push_back(k*k);
            overall.insert(k*k);
            k++;
            if(k*k==n)
            {
                return 1;
            }
        }
        int s=result.size();
        deque<int> f=result;
        deque<int> c(s,1);
        while(f.size()>0)
        {
            int t=f.front();
            int r=c.front();
            c.pop_front();
            f.pop_front();
            for(int i=0;i<result.size();i++)
            {
                if(t+result[i]<=n&&overall.find(t+result[i])==overall.end())
                {
                    f.push_back(t+result[i]);
                    overall.insert(t+result[i]);
                    c.push_back(r+1);
                }
                if(t+result[i]==n)
                {
                    return r+1;
                }
            }
        }
        return -1;
    }
};