class Solution 
{
public:
    bool canPlaceFlowers(vector<int>& flowerbed, int n) 
    {
        int check=0;
        for(int i=0;i<flowerbed.size();i++)
        {
            check+=flowerbed[i];
        }
        if(check==0)
        {
            if(ceil((double)flowerbed.size()/(double)2)>=n)
            {
                return true;
            }
            else
            {
                return false;
            }
        }
        bool result=false;
        int count=0;
        int currentCount=0;
        int flag=0;
        if(flowerbed.size()==1)
        {
            if(flowerbed[0]==0)
            {
                result=true;
                return true;
            }	
        }
        for(int i=0;i<flowerbed.size();i++)
        {
            if(flowerbed[i]==0)
            {
                currentCount+=1;	
            }
            else
            {
                if(currentCount>=3&&flag==1)
                {
                    count+=ceil((double)currentCount/2)-1;
                }
                else if(currentCount>=2&&flag==0)
                {
                    count+=currentCount/2;
                }
                if(flowerbed[i]==1)
                {
                    flag=1;	
                }
                currentCount=0;
            }
        }
        if(flowerbed[flowerbed.size()-1]==0)
        {
            if(currentCount>=2)
            {
                count+=currentCount/2;
            }	
        }
        if(count>=n)
        {
            result=true;
            return true;
        }
        return result;
    }
};