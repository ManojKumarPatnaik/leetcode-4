class NumMatrix 
{
    public:
    vector<vector<int>> s;
    vector<vector<int>> r;
    NumMatrix(vector<vector<int>>& m) 
    {
        if(m.size()==0)
        {
            return;
        }
        vector<int> temp((int)m[0].size()+1,0);
        s.push_back(temp);
        for(int i=0;i<m.size();i++)
        {
            vector<int> temp(1,0);
            for(int j=0;j<m[0].size();j++)
            {
                temp.push_back(temp.back()+m[i][j]);
            }
            s.push_back(temp);
        }
        for(int i=0;i<s.size();i++)
        {
            vector<int> temp;
            if(i==0)
            {
                vector<int> c((int)s[0].size(),0);
                r.push_back(c);
                continue;
            }
            for(int j=0;j<s[i].size();j++)
            {
                temp.push_back(r[i-1][j]+s[i][j]);                
            }
            r.push_back(temp);
        }
    }
    
    int sumRegion(int row1, int col1, int row2, int col2)
    {
        return r[row2+1][col2+1]+r[row1][col1]-r[row1][col2+1]-r[row2+1][col1];
    }
};

/**
 * Your NumMatrix object will be instantiated and called as such:
 * NumMatrix* obj = new NumMatrix(matrix);
 * int param_1 = obj->sumRegion(row1,col1,row2,col2);
 */