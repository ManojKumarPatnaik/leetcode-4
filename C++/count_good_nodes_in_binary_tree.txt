/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution 
{
    public:
    int result=0;
    map<TreeNode*,TreeNode*> p;
    map<TreeNode*,int> maximum;
    void getParent(TreeNode* root)
    {
        if(root==NULL)
        {
            return;
        }
        if(root->left)
        {
            p[root->left]=root;
        }
        if(root->right)
        {
            p[root->right]=root;
        }
        getParent(root->left);
        getParent(root->right);
    }
    void dfs(TreeNode* root)
    {
        if(root==NULL)
        {
            return;
        }
        int M=max(root->val,maximum[p[root]]);
        maximum[root]=M;
        if(root->val==M)
        {
            result++;
        }
        dfs(root->left);
        dfs(root->right);
    }
    int goodNodes(TreeNode* root) 
    {
        p[root]=root;
        maximum[root]=-2147483648;
        getParent(root);
        dfs(root);
        return result;
    }
};