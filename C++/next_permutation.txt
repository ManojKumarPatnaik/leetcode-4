class Solution {
public:
    void nextPermutation(vector<int>& nums)
    {
        if(nums.size()<=1)
        {
            return;
        }
        int flag=0;
        int index=0;
        int check=0;
        for(int i=0;i<nums.size()-1;i++)
        {
            if(nums[i]<nums[i+1])
            {
                check=1;
            }
        }
        if(check==0)
        {
            reverse(nums.begin(),nums.end());
            return;
        }
        for(int i=nums.size()-2;i>-1;i--)
        {
            if(nums[i]<nums[i+1])
            {
                index=i;
                flag=1;
                break;
            }
        }
        if(flag==0)
        {
            index=nums.size()-1;
        }
        
        vector<int> current;
        int pivot=nums[index];
        int minimum=2147483647;
        int minimum_index=-1;
        int order=-1;
        for(int i=index+1;i<nums.size();i++)
        {
            current.push_back(nums[i]);
            if(nums[i]>nums[index]&&nums[i]<minimum)
            {
                minimum=nums[i];
                minimum_index=i;
                order=i-index-1;
            }
        }
        nums[index]=minimum;
        current[order]=pivot;
        sort(current.begin(),current.end());
        for(int i=index+1;i<nums.size();i++)
        {
            nums[i]=current[i-index-1];
        }
    }
};