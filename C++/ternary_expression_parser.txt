class Solution 
{
public:
    string parseTernary(string expression) 
    {
        string output=expression;
        while(output.length()>1)
        {
            string result="";
            for(int i=(int)output.length()-1;i>-1;i--)
            {
                int c=0;
                c++;
                if(i-1>=0&&output[i-1]==':')
                {
                    c++;                
                }
                c++;                
                if(i-3>=0&&output[i-3]=='?')
                {
                    c++;
                }
                c++;
                if(c==5)
                {
                    if(output[i-4]=='T')
                    {
                        result+=output[i-2];
                    }
                    else
                    {
                        result+=output[i];
                    }
                    i-=4;
                    string temp=output.substr(0,i);
                    reverse(temp.begin(),temp.end());
                    result+=temp;
                    break;
                }
                else
                {
                    result+=output[i];
                }
            }
            reverse(result.begin(),result.end());
            output=result;
            result="";
        }
        return output;
    }
};