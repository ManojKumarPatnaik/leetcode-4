class Solution 
{
    public:
    int balancedString(string s) 
    {
        int result=2147483647;
        int a[4];
        int n=s.length();
        int target=n/4;
        memset(a,0,sizeof(a));
        for(int i=0;i<s.length();i++)
        {
            if(s[i]=='Q')
            {
                a[0]++;   
            }
            if(s[i]=='W')
            {
                a[1]++;   
            }
            if(s[i]=='E')
            {
                a[2]++;   
            }
            if(s[i]=='R')
            {
                a[3]++;   
            }
        }
        int b[4];
        memset(b,0,sizeof(b));
        b[0]=max(0,a[0]-target);
        b[1]=max(0,a[1]-target);
        b[2]=max(0,a[2]-target);
        b[3]=max(0,a[3]-target);

        int c[4];
        memset(c,0,sizeof(c));
        int p1=0;
        int p2=0;
        int f=0;
        for(int i=0;i<4;i++)
        {
            if(c[i]<b[i])
            {
                f=1;
                break;
            }
        }
        if(f==0)
        {
            return 0;   
        }
        
        if(s[0]=='Q')
        {
            c[0]++;   
        }
        if(s[0]=='W')
        {
            c[1]++;   
        }
        if(s[0]=='E')
        {
            c[2]++;   
        }
        if(s[0]=='R')
        {
            c[3]++;   
        }
        f=0;
        for(int i=0;i<4;i++)
        {
            if(c[i]<b[i])
            {
                f=1;
                break;
            }
        }
        if(f==0)
        {
            return 1;   
        }
        while(p1<s.length()&&p2<s.length())
        {
            f=0;
            for(int i=0;i<4;i++)
            {
                if(c[i]<b[i])
                {
                    f=1;
                    break;
                }
            }
            if(f==0)
            {
                result=min(result,p2-p1+1);   
            }
            if(p2==(int)s.length()-1)
            {
                if(s[p1]=='Q')
                {
                    c[0]--;
                }
                if(s[p1]=='W')
                {
                    c[1]--;
                }
                if(s[p1]=='E')
                {
                    c[2]--;
                }
                if(s[p1]=='R')
                {
                    c[3]--;
                }
                p1++;
            }
            else if(p1==(int)s.length()-1)
            {
                p2++;   
                if(s[p2]=='Q')
                {
                    c[0]++;
                }
                if(s[p2]=='W')
                {
                    c[1]++;
                }
                if(s[p2]=='E')
                {
                    c[2]++;
                }
                if(s[p2]=='R')
                {
                    c[3]++;
                }
            }
            else
            {
                int f=0;
                for(int i=0;i<4;i++)
                {
                    if(c[i]<b[i])
                    {
                        f=1;
                        break;
                    }
                }
                if(f==1)
                {
                    p2++;
                    if(s[p2]=='Q')
                    {
                        c[0]++;
                    }
                    if(s[p2]=='W')
                    {
                        c[1]++;
                    }
                    if(s[p2]=='E')
                    {
                        c[2]++;
                    }
                    if(s[p2]=='R')
                    {
                        c[3]++;
                    }
                }
                else
                {
                    result=min(result,p2-p1+1);
                    if(s[p1]=='Q')
                    {
                        c[0]--;
                    }
                    if(s[p1]=='W')
                    {
                        c[1]--;
                    }
                    if(s[p1]=='E')
                    {
                        c[2]--;
                    }
                    if(s[p1]=='R')
                    {
                        c[3]--;
                    }
                    p1++;
                }
            }
        }
        return result;
    }
};