class Solution 
{
    public:
    int racecar(int target) 
    {
        deque<pair<long long int,long long int>> q;
        deque<int> c;
        q.push_back({0,1});
        c.push_back(0);
        unordered_set<string> v;
        v.insert("0,1");
        while(q.size()>0)
        {
            pair<long long int,long long int> p=q.front();
            int k=c.front();
            q.pop_front();
            c.pop_front();
            long long int position=p.first;
            long long int speed=p.second;
            if(position==target)
            {
                return k;
            }
            long long int p1=position+speed;
            long long int s1=speed*2;
            string t1=to_string(p1)+","+to_string(s1);
            if(v.find(t1)==v.end()&&p1>0&&p1<target*2)
            {
                q.push_back({p1,s1});
                c.push_back(k+1);
                v.insert(t1);
            }
            long long int p2=position;
            long long int s2=((speed>0)?-1:1);
            string t2=to_string(p2)+","+to_string(s2);
            if(v.find(t2)==v.end()&&p2>0&&p2<target*2)
            {
                q.push_back({p2,s2});
                c.push_back(k+1);
                v.insert(t2);
            }
        }
        return -1;
    }
};