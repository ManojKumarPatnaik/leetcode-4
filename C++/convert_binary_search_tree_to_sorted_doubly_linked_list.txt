/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* left;
    Node* right;

    Node() {}

    Node(int _val, Node* _left, Node* _right) {
        val = _val;
        left = _left;
        right = _right;
    }
};
*/
class Solution {
public:
    vector<int> total;
    void test(Node* root)
    {
        if(root==NULL)
        {
            return;
        }
        
        test(root->left);
        total.push_back(root->val);
        test(root->right);
    }
    Node* treeToDoublyList(Node* root)
    {
        if(root==NULL)
        {
            return NULL;
        }
        test(root);
        Node* r=new Node(total[0]);
        Node* c=r;
        Node* l=r;
        for(int i=0;i<total.size();i++)
        {
            r->val=total[i];
            if(i!=(int)total.size()-1)
            {
                r->right=new Node();
                r->right->left=r;
                r=r->right;
            }
            else
            {
                r->right=c;
            }
            l=r;
        }
        r=c;
        r->left=l;
        return r;
    }
};