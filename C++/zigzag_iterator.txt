class ZigzagIterator {
public:
    vector<int> f1;
    vector<int> f2;
    int p1=0;
    int p2=0;
    int i1=0;
    int i2=0;
    int c=0;
    ZigzagIterator(vector<int>& v1, vector<int>& v2)
    {
        f1=v1;
        f2=v2;
        if(v1.size()==0)
        {
            p1=1;
        }
        if(v2.size()==0)
        {
            p2=1;
        }
    }

    int next()
    {
        int result=0;
        if(p1==0&&p2==0)
        {
            if(c%2==0)
            {
                if(i1<f1.size())
                {
                    result=f1[i1];
                    i1++;
                    if(i1==f1.size())
                    {
                        p1=1;
                    }
                }
            }
            else
            {
                if(i2<f2.size())
                {
                    result=f2[i2];                    
                    i2++;
                    if(i2==f2.size())
                    {
                        p2=1;
                    }
                }
            }
        }
        else if(p1==1)
        {
            if(i2<f2.size())
            {
                result=f2[i2];                    
                i2++;
                if(i2==f2.size())
                {
                    p2=1;
                }
            }
        }
        else if(p2==1)
        {
            if(i1<f1.size())
            {
                result=f1[i1];
                i1++;
                if(i1==f1.size())
                {
                    p1=1;
                }
            }
        }
        c++;
        return result; 
    }

    bool hasNext() 
    {
        return p1==0||p2==0;    
    }
};

/**
 * Your ZigzagIterator object will be instantiated and called as such:
 * ZigzagIterator i(v1, v2);
 * while (i.hasNext()) cout << i.next();
 */