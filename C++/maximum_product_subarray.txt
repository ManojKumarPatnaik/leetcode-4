class Solution {
public:
    int maxProduct(vector<int>& nums) 
    {
        int result=0;
        if(nums.size()==0)
        {
            return 0;
        }
        if(nums.size()==1)
        {
            return nums[0];
        }
        int n=nums.size();
        int dp[n][2];//最大和最小
        memset(dp,0,sizeof(dp));
        if(nums[0]>0)
        {
            dp[0][0]=nums[0];
            dp[0][1]=0;
        }
        else
        {
            dp[0][0]=0;
            dp[0][1]=nums[0];
        }
        for(int i=1;i<nums.size();i++)
        {
            if(nums[i]>0)
            {
                dp[i][0]=max(dp[i-1][0]*nums[i],nums[i]);
                dp[i][1]=dp[i-1][1]*nums[i];
            }
            else
            {
                dp[i][0]=dp[i-1][1]*nums[i];
                dp[i][1]=min(dp[i-1][0]*nums[i],nums[i]);
            }
        }
        for(int i=0;i<nums.size();i++)
        {
            result=max(result,dp[i][0]);
        }
        return result;
    }
};