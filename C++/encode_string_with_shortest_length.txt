class Solution 
{
    public:
    string encode(string s) 
    {
        int n=s.length();
        vector<vector<string>> dp(n,vector<string>(n,""));
        for(int l=1;l<=n;l++)
        {
            for(int i=0;i<n-l+1;i++)
            {
                int j=i+l-1;
                dp[i][j]=s.substr(i,l);
                for(int k=i;k<j;k++)
                {
                    if((int)dp[i][k].length()+(int)dp[k+1][j].length()<(int)dp[i][j].length())
                    {
                        dp[i][j]=dp[i][k]+dp[k+1][j];
                    }
                }
                string t=s.substr(i,l)+s.substr(i,l);
                int p=(t+t).find(t,1);
                string r="";
                if(p>=l)
                {
                    r=s.substr(i,l);
                }
                else
                {
                    r=to_string(l/p)+"["+dp[i][i+p-1]+"]";
                }
                if((int)r.length()<(int)dp[i][j].length())
                {
                    dp[i][j]=r;
                }
            }
        }
        return dp[0][n-1];
    }
};