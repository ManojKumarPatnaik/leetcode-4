class Solution {
public:
    int maxTurbulenceSize(vector<int>& A)
    {
        int result=1;
        if(A.size()==0)
        {
            return 0;
        }
        if(A.size()==1)
        {
            return 1;
        }
        int flag=0;
        for(int i=1;i<A.size();i++)
        {
            if(A[i]!=A[i-1])
            {
                flag=1;
                break;
            }
        }
        if(flag==0)
        {
            return 1;
        }
        int n=A.size();
        int a[n-1];
        memset(a,0,sizeof(a));
        for(int i=1;i<A.size();i++)
        {
            if(A[i]>A[i-1])
            {
                a[i-1]=0;
            }
            else if(A[i]<A[i-1])
            {
                a[i-1]=1;
            }
            else
            {
                a[i-1]=-1;
            }
        }
        int counter=2;
        for(int i=1;i<n-1;i++)
        {
            if(a[i]==1-a[i-1])
            {
                counter++;
            }
            else
            {
                counter=2;
            }
            result=max(result,counter);
        }
        return result;
    }
};