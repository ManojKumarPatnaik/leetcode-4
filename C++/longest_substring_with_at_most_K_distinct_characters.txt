class Solution {
public:
    int lengthOfLongestSubstringKDistinct(string s, int k)
    {
        if(k==0)
        {
            return 0;
        }
        map<char,int> total;
        int result=0;
        int c=0;
        for(int i=0;i<s.length();i++)
        {
            if(total.size()<k)
            {
                total[s[i]]=i;
                c++;
            }
            else if(total.find(s[i])!=total.end())
            {
                total[s[i]]=i;
                c++;
            }
            else
            {
                int r=2147483647;
                for(map<char,int>::iterator it=total.begin();it!=total.end();it++)
                {
                    r=min(r,it->second);
                }
                i=r;
                total.clear();
                c=0;
            }
            result=max(result,c);
        }
        return result;
    }
};