/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    set<int> total;
    
    void test(TreeNode* root)
    {
        if(root==NULL)
        {
            return;
        }
        total.insert(root->val);
        if(root->left!=NULL)
        {
            test(root->left);
        }
        if(root->right!=NULL)
        {
            test(root->right);
        }
    }
    int findSecondMinimumValue(TreeNode* root) 
    {
        if(root==NULL)
        {
            return -1;
        }
        int m1=2147483647;
        int m2=2147483647;
        test(root);
        vector<int> result(total.begin(),total.end());
        if(result.size()==1)
        {
            return -1;
        }
        for(int i=0;i<result.size();i++)
        {
            if(result[i]<m1)
            {
                m1=result[i];
            }
        }
        for(int i=0;i<result.size();i++)
        {
            if(result[i]<m2&&result[i]!=m1)
            {
                m2=result[i];
            }
        }
        
        return m2;
    }
};