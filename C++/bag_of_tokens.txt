class Solution {
public:
    int bagOfTokensScore(vector<int>& tokens, int P)
    {
        sort(tokens.begin(),tokens.end());
        int n=tokens.size();
        int p1=0;
        int p2=(int)tokens.size()-1;
        int s=0;
        int c=P;
        int flag=0;
        int process=0;
        for(int i=0;i<tokens.size();i++)
        {
            s+=tokens[i];
            if(tokens[i]<=P)
            {
                flag=1;
            }
        }
        if(flag==0)
        {
            return 0;
        }
        int total=p2-p1+1;
        if(P>=s)
        {
            return total;
        }
        while(P<s&&((n%2==0&&p1+1<p2)||(n%2==1&&p1<p2)))
        {
            s-=tokens[p2]-tokens[p1];
            P+=tokens[p2]-tokens[p1];
            p2--;
            p1++;
            int temp=0;
            int q=P;
            for(int i=p1;i<=p2;i++)
            {
                if(q-tokens[i]>0)
                {
                    temp++;
                    q-=tokens[i];
                }
            }
            process=max(process,temp);
        }
        total=0;
        for(int i=p1;i<=p2;i++)
        {
            if(P>=tokens[i])
            {
                total++;
                P-=tokens[i];
            }
        }
        int r=0;
        for(int i=0;i<tokens.size();i++)
        {
            if(c-tokens[i]>0)
            {
                r++;
                c-=tokens[i];
            }
        }
        return max(max(total,r),process);
    }
};