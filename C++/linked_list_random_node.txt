/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
int* r;
int total=0;
class Solution {
public:
    /** @param head The linked list's head.
        Note that the head is guaranteed to be not null, so it contains at least one node. */
    int c=0;
    ListNode* current;
    ListNode* head;
    Solution(ListNode* h) 
    {
        current=h;
        while(h!=NULL)
        {
            c++;
            h=h->next;
        }
        h=current;
        head=current;
        srand(time(NULL));
    }
    
    /** Returns a random node's value. */
    int getRandom() 
    {
        int r;
        int k=rand()%c;
        for(int i=0;i<k;i++)
        {
            head=head->next;
        }
        r=head->val;
        head=current;
        return r;
    }
};

/**
 * Your Solution object will be instantiated and called as such:
 * Solution obj = new Solution(head);
 * int param_1 = obj.getRandom();
 */