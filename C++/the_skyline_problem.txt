class Solution 
{
    public:
    vector<vector<int>> getSkyline(vector<vector<int>>& buildings) 
    {
        vector<vector<int>> result;
        vector<vector<int>> total;
        multiset<int> m={0};
        int previous=-1;
        for(int i=0;i<buildings.size();i++)
        {
            total.push_back({buildings[i][0],-buildings[i][2]});
            total.push_back({buildings[i][1],buildings[i][2]});
        }
        sort(total.begin(),total.end());
        for(int i=0;i<total.size();i++)
        {
            if(total[i][1]<0)
            {
                m.insert(-total[i][1]);
            }
            else
            {
                m.erase(m.find(total[i][1]));
            }
            int current=*m.rbegin();
            if(current!=previous)
            {
                result.push_back({total[i][0],current});
                previous=current;
            }
        }
        return result;
    }
};