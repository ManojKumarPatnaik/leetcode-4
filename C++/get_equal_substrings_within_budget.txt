class Solution 
{
    public:
    int equalSubstring(string s, string t, int maxCost) 
    {
        int r=0;
        vector<int> total;
        for(int i=0;i<s.length();i++)
        {
            total.push_back(abs((int)s[i]-(int)t[i]));
        }
        vector<int> summation={0};
        for(int i=0;i<total.size();i++)
        {
            summation.push_back(summation.back()+total[i]);
        }
        int p1=0;
        int p2=1;
        while(true)
        {        
            if(p2>=(int)summation.size()-1)
            {
                if(summation[p2]-summation[p1]<=maxCost)
                {
                    r=max(r,p2-p1);
                    break;
                }
                p1++;
            }
            else if(summation[p2]-summation[p1]<=maxCost)
            {
                r=max(r,p2-p1);
                p2++;
            }
            else
            {
                p1++;
            }
            if(p1==p2&&p2==(int)summation.size()-1)
            {
                break;
            }
        }
        return r;
    }
};