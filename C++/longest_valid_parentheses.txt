class Solution 
{
    public:
    int longestValidParentheses(string s) 
    {
        int M=0;
        int n=s.length();
        int dp[n+1];
        memset(dp,0,sizeof(dp));
        for(int i=0;i<s.length();i++)
        {
            if(s[i]=='(')
            {
                dp[i+1]=0;   
            }
            else
            {
                if(i>0&&s[i-1]=='(')
                {
                    dp[i+1]=dp[i-1]+2;
                }
                else if(i>0&&s[i-1]==')'&&i-dp[i]-1>=0&&s[i-dp[i]-1]=='(')
                {
                    dp[i+1]=dp[i]+2+dp[i-dp[i]-1];   
                }
            }
            M=max(M,dp[i+1]);
        }
        return M;
    }
};