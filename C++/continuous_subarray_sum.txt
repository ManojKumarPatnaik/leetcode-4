class Solution 
{
public:    
    bool checkSubarraySum(vector<int>& nums, int k) 
    {
        if(nums.size()==0)
        {
            return k==0;
        }
        if(k==0)
        {
            for(int i=1;i<nums.size();i++)
            {
                if(nums[i-1]==0&&nums[i]==0)
                {
                    return true;
                }
            }
            return false;
        }
        k=abs(k);
        map<int,int> total;
        map<int,int> overall;
        map<int,int>::iterator it;
        int r[nums.size()];
        memset(r,0,sizeof(r));
        
        r[0]=nums[0]%k;
        total[r[0]]+=1;
        for(int i=1;i<nums.size();i++)
        {
            r[i]=(r[i-1]+nums[i])%k;
            total[r[i]%k]+=1;
            if(r[i]==r[i-1])
            {
                overall[r[i]]=1;
            }
            if(r[i]%k==0)
            {
                return true;
            }
        }
        for(it=total.begin();it!=total.end();it++)
        {
            if(it->second>1)
            {
                if(it->second>2)
                {
                    return true;
                }
                else if(overall[it->first]!=1)
                {
                    return true;
                }
            }
        }
        return false;
    }
};