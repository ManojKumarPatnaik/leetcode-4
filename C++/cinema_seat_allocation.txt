class Solution
{
    public:
    int maxNumberOfFamilies(int n, vector<vector<int>>& reservedSeats) 
    {
        //2345 6789 4567
        unordered_map<int,set<int>> total;
        for(int i=0;i<reservedSeats.size();i++)
        {
            if(reservedSeats[i][1]!=1&&reservedSeats[i][1]!=10)
            {
                total[reservedSeats[i][0]].insert(reservedSeats[i][1]);
            }
        }
        int result=n*2-(int)total.size()*2;
        for(unordered_map<int,set<int>>::iterator it=total.begin();it!=total.end();it++)
        {
            if(it->second.find(2)==it->second.end()&&it->second.find(3)==it->second.end()&&it->second.find(4)==it->second.end()&&it->second.find(5)==it->second.end())
            {
                result++;
            }
            else if(it->second.find(4)==it->second.end()&&it->second.find(5)==it->second.end()&&it->second.find(6)==it->second.end()&&it->second.find(7)==it->second.end())
            {
                result++;
            }
            else if(it->second.find(6)==it->second.end()&&it->second.find(7)==it->second.end()&&it->second.find(8)==it->second.end()&&it->second.find(9)==it->second.end())
            {
                result++;
            }
        }
        return result;
    }
};