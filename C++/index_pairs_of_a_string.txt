bool sortAll(const vector<int>& v1,const vector<int>& v2)
{
    if(v1[0]==v2[0])
    {
        return v1[1]<v2[1];
    }
    return v1[0]<v2[0];
}
class Solution {
public:
    vector<vector<int>> indexPairs(string text, vector<string>& words) 
    {
        vector<vector<int>> result;
        for(int i=0;i<words.size();i++)
        {
            int n=words[i].length();
            if(n>text.length())
            {
                continue;
            }
            for(int j=0;j<text.length()-n+1;j++)
            {
                string temp=text.substr(j,n);
                if(temp==words[i])
                {
                    vector<int> temp;
                    temp.push_back(j);
                    temp.push_back(j+n-1);
                    result.push_back(temp);
                }
            }
        }
        sort(result.begin(),result.end(),sortAll);
        return result;
    }
};