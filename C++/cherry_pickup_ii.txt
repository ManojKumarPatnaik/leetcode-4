class Solution 
{
    public:
    int cherryPickup(vector<vector<int>>& grid) 
    {
        int result=0;
        int m=grid.size();
        int n=grid[0].size();
        int d1[n][n];
        int d2[n][n];
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                d1[i][j]=-2147483648;
                d2[i][j]=-2147483648;
            }
        }
        d1[0][n-1]=grid[0][0]+grid[0][n-1];
        for(int i=1;i<m;i++)
        {
            for(int j=0;j<n*n;j++)
            {
                int p1=j/n;
                int p2=j%n;
                for(int a=max(p1-1,0);a<=min(p1+1,n-1);a++)
                {
                    for(int b=max(p2-1,0);b<=min(p2+1,n-1);b++)
                    {
                        d2[p1][p2]=max(d2[p1][p2],d1[a][b]+grid[i][p1]+grid[i][p2]);
                    }
                    if(p1==p2)
                    {
                        d2[p1][p2]-=grid[i][p1];
                    }
                }
            }
            for(int a=0;a<n;a++)
            {
                for(int b=0;b<n;b++)
                {
                    d1[a][b]=d2[a][b];
                    d2[a][b]=-2147483648;
                }
            }
        }
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                result=max(result,d1[i][j]);
            }
        }
        return result;
    }
};