int dp[10];
int s[10];
int f=0;
class Solution 
{
    public:
    void dfs(int a[10],int n,int c,int i)
    {
        if(c==n)
        {
            dp[n]++;
            return;
        }
        if(c>n)
        {
            return;
        }
        if(i==1)
        {
            if(a[2]==0)
            {
                a[2]=1;
                dfs(a,n,c+1,2);
                a[2]=0;
            }
            if(a[3]==0&&a[2]==1)
            {
                a[3]=1;
                dfs(a,n,c+1,3);
                a[3]=0;
            }
            if(a[4]==0)
            {
                a[4]=1;
                dfs(a,n,c+1,4);
                a[4]=0;
            }
            if(a[7]==0&&a[4]==1)
            {
                a[7]=1;
                dfs(a,n,c+1,7);
                a[7]=0;
            }
            if(a[5]==0)
            {
                a[5]=1;
                dfs(a,n,c+1,5);
                a[5]=0;
            }
            if(a[9]==0&&a[5]==1)
            {
                a[9]=1;
                dfs(a,n,c+1,9);
                a[9]=0;
            }
            if(a[6]==0)
            {
                a[6]=1;
                dfs(a,n,c+1,6);
                a[6]=0;
            }
            if(a[8]==0)
            {
                a[8]=1;
                dfs(a,n,c+1,8);
                a[8]=0;
            }
        }
        else if(i==2)
        {
            if(a[1]==0)
            {
                a[1]=1;
                dfs(a,n,c+1,1);
                a[1]=0;
            }
            if(a[3]==0)
            {
                a[3]=1;
                dfs(a,n,c+1,3);
                a[3]=0;
            }
            if(a[5]==0)
            {
                a[5]=1;
                dfs(a,n,c+1,5);
                a[5]=0;
            }
            if(a[8]==0&&a[5]==1)
            {
                a[8]=1;
                dfs(a,n,c+1,8);
                a[8]=0;
            }
            if(a[4]==0)
            {
                a[4]=1;
                dfs(a,n,c+1,4);
                a[4]=0;
            }
            if(a[6]==0)
            {
                a[6]=1;
                dfs(a,n,c+1,6);
                a[6]=0;
            }
            if(a[7]==0)
            {
                a[7]=1;
                dfs(a,n,c+1,7);
                a[7]=0;
            }
            if(a[9]==0)
            {
                a[9]=1;
                dfs(a,n,c+1,9);
                a[9]=0;
            }
        }
        else if(i==3)
        {
            if(a[2]==0)
            {
                a[2]=1;
                dfs(a,n,c+1,2);
                a[2]=0;
            }
            if(a[1]==0&&a[2]==1)
            {
                a[1]=1;
                dfs(a,n,c+1,1);
                a[1]=0;
            }
            if(a[6]==0)
            {
                a[6]=1;
                dfs(a,n,c+1,6);
                a[6]=0;
            }
            if(a[9]==0&&a[6]==1)
            {
                a[9]=1;
                dfs(a,n,c+1,9);
                a[9]=0;
            }
            if(a[5]==0)
            {
                a[5]=1;
                dfs(a,n,c+1,5);
                a[5]=0;
            }
            if(a[7]==0&&a[5]==1)
            {
                a[7]=1;
                dfs(a,n,c+1,7);
                a[7]=0;
            }
            if(a[4]==0)
            {
                a[4]=1;
                dfs(a,n,c+1,4);
                a[4]=0;
            }
            if(a[8]==0)
            {
                a[8]=1;
                dfs(a,n,c+1,8);
                a[8]=0;
            }
        }
        else if(i==4)
        {
            if(a[1]==0)
            {
                a[1]=1;
                dfs(a,n,c+1,1);
                a[1]=0;
            }
            if(a[3]==0)
            {
                a[3]=1;
                dfs(a,n,c+1,3);
                a[3]=0;
            }
            if(a[5]==0)
            {
                a[5]=1;
                dfs(a,n,c+1,5);
                a[5]=0;
            }
            if(a[6]==0&&a[5]==1)
            {
                a[6]=1;
                dfs(a,n,c+1,6);
                a[6]=0;
            }
            if(a[2]==0)
            {
                a[2]=1;
                dfs(a,n,c+1,2);
                a[2]=0;
            }
            if(a[7]==0)
            {
                a[7]=1;
                dfs(a,n,c+1,7);
                a[7]=0;
            }
            if(a[8]==0)
            {
                a[8]=1;
                dfs(a,n,c+1,8);
                a[8]=0;
            }
            if(a[9]==0)
            {
                a[9]=1;
                dfs(a,n,c+1,9);
                a[9]=0;
            }
        }
        else if(i==5)
        {
            if(a[1]==0)
            {
                a[1]=1;
                dfs(a,n,c+1,1);
                a[1]=0;
            }
            if(a[3]==0)
            {
                a[3]=1;
                dfs(a,n,c+1,3);
                a[3]=0;
            }
            if(a[2]==0)
            {
                a[2]=1;
                dfs(a,n,c+1,2);
                a[2]=0;
            }
            if(a[8]==0)
            {
                a[8]=1;
                dfs(a,n,c+1,8);
                a[8]=0;
            }
            if(a[4]==0)
            {
                a[4]=1;
                dfs(a,n,c+1,4);
                a[4]=0;
            }
            if(a[6]==0)
            {
                a[6]=1;
                dfs(a,n,c+1,6);
                a[6]=0;
            }
            if(a[7]==0)
            {
                a[7]=1;
                dfs(a,n,c+1,7);
                a[7]=0;
            }
            if(a[9]==0)
            {
                a[9]=1;
                dfs(a,n,c+1,9);
                a[9]=0;
            }
        }
        else if(i==6)
        {
            if(a[1]==0)
            {
                a[1]=1;
                dfs(a,n,c+1,1);
                a[1]=0;
            }
            if(a[3]==0)
            {
                a[3]=1;
                dfs(a,n,c+1,3);
                a[3]=0;
            }
            if(a[5]==0)
            {
                a[5]=1;
                dfs(a,n,c+1,5);
                a[5]=0;
            }
            if(a[4]==0&&a[5]==1)
            {
                a[4]=1;
                dfs(a,n,c+1,4);
                a[4]=0;
            }
            if(a[2]==0)
            {
                a[2]=1;
                dfs(a,n,c+1,2);
                a[2]=0;
            }
            if(a[7]==0)
            {
                a[7]=1;
                dfs(a,n,c+1,7);
                a[7]=0;
            }
            if(a[8]==0)
            {
                a[8]=1;
                dfs(a,n,c+1,8);
                a[8]=0;
            }
            if(a[9]==0)
            {
                a[9]=1;
                dfs(a,n,c+1,9);
                a[9]=0;
            }
        }
        else if(i==7)
        {
            if(a[1]==0&&a[4]==1)
            {
                a[1]=1;
                dfs(a,n,c+1,1);
                a[1]=0;
            }
            if(a[3]==0&&a[5]==1)
            {
                a[3]=1;
                dfs(a,n,c+1,3);
                a[3]=0;
            }
            if(a[5]==0)
            {
                a[5]=1;
                dfs(a,n,c+1,5);
                a[5]=0;
            }
            if(a[8]==0)
            {
                a[8]=1;
                dfs(a,n,c+1,8);
                a[8]=0;
            }
            if(a[4]==0)
            {
                a[4]=1;
                dfs(a,n,c+1,4);
                a[4]=0;
            }
            if(a[6]==0)
            {
                a[6]=1;
                dfs(a,n,c+1,6);
                a[6]=0;
            }
            if(a[2]==0)
            {
                a[2]=1;
                dfs(a,n,c+1,2);
                a[2]=0;
            }
            if(a[9]==0&&a[8]==1)
            {
                a[9]=1;
                dfs(a,n,c+1,9);
                a[9]=0;
            }
        }
        else if(i==8)
        {
            if(a[1]==0)
            {
                a[1]=1;
                dfs(a,n,c+1,1);
                a[1]=0;
            }
            if(a[3]==0)
            {
                a[3]=1;
                dfs(a,n,c+1,3);
                a[3]=0;
            }
            if(a[5]==0)
            {
                a[5]=1;
                dfs(a,n,c+1,5);
                a[5]=0;
            }
            if(a[2]==0&&a[5]==1)
            {
                a[2]=1;
                dfs(a,n,c+1,2);
                a[2]=0;
            }
            if(a[4]==0)
            {
                a[4]=1;
                dfs(a,n,c+1,4);
                a[4]=0;
            }
            if(a[6]==0)
            {
                a[6]=1;
                dfs(a,n,c+1,6);
                a[6]=0;
            }
            if(a[7]==0)
            {
                a[7]=1;
                dfs(a,n,c+1,7);
                a[7]=0;
            }
            if(a[9]==0)
            {
                a[9]=1;
                dfs(a,n,c+1,9);
                a[9]=0;
            }
        }
        else if(i==9)
        {
            if(a[1]==0&&a[5]==1)
            {
                a[1]=1;
                dfs(a,n,c+1,1);
                a[1]=0;
            }
            if(a[3]==0&&a[6]==1)
            {
                a[3]=1;
                dfs(a,n,c+1,3);
                a[3]=0;
            }
            if(a[5]==0)
            {
                a[5]=1;
                dfs(a,n,c+1,5);
                a[5]=0;
            }
            if(a[8]==0)
            {
                a[8]=1;
                dfs(a,n,c+1,8);
                a[8]=0;
            }
            if(a[4]==0)
            {
                a[4]=1;
                dfs(a,n,c+1,4);
                a[4]=0;
            }
            if(a[2]==0)
            {
                a[2]=1;
                dfs(a,n,c+1,2);
                a[2]=0;
            }
            if(a[6]==0)
            {
                a[6]=1;
                dfs(a,n,c+1,6);
                a[6]=0;
            }
            if(a[7]==0&&a[8]==1)
            {
                a[7]=1;
                dfs(a,n,c+1,7);
                a[7]=0;
            }
        }
    }
    int numberOfPatterns(int m, int n) 
    {
        if(f==0)
        {
            memset(dp,0,sizeof(dp));
            memset(s,0,sizeof(dp));
            f=1;
            for(int i=1;i<=9;i++)
            {
                for(int j=1;j<=9;j++)
                {
                    int a[10];
                    memset(a,0,sizeof(a));
                    a[j]=1;
                    dfs(a,i,1,j);
                }
            }
            for(int i=1;i<=9;i++)
            {
                s[i]=s[i-1]+dp[i];
            }
        }
        return s[n]-s[m-1];
        
    }
};