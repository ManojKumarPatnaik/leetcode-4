/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<TreeNode*> result;
    unordered_map<int,int> total;
    TreeNode* test(TreeNode* root)
    {
        if(root==NULL)
        {
            return NULL;
        }
        if(total.find(root->val)!=total.end())
        {
            TreeNode* l=test(root->left);
            TreeNode* r=test(root->right);
            if(l)
            {
                result.push_back(l);
            }
            if(r)
            {
                result.push_back(r);
            }
            return NULL;
        }
        root->left=test(root->left);
        root->right=test(root->right);
        return root;
    }
    vector<TreeNode*> delNodes(TreeNode* root, vector<int>& to_delete) 
    {
        for(int i=0;i<to_delete.size();i++)
        {
            total[to_delete[i]]=1;
        }
        TreeNode* c=test(root);
        if(c)
        {
            result.push_back(c);
        }
        return result;
    }
};